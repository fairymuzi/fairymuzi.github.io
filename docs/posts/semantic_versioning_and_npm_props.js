import projectConfig from '/pagic.config.js';
export default {
    config: { "root": "/", ...projectConfig, branch: '' },
    'pagePath': "posts/semantic_versioning_and_npm.md",
    'layoutPath': "posts/_layout.tsx",
    'outputPath': "posts/semantic_versioning_and_npm.html",
    'title': "npm 语义化版本号",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>npm 语义化版本号</h1>\n<blockquote>\n<p>本文开始介绍了 <a href="https://npmjs.com">npm</a> 中语义化版本号的格式，然后对如何升级版本号进行了归纳，最后总结了如何正确的定义依赖的版本号。</p>\n</blockquote>\n<h2 id="%E8%AE%A4%E8%AF%86-npm-%E7%89%88%E6%9C%AC%E5%8F%B7">认识 <a href="https://npmjs.com">npm</a> 版本号<a class="anchor" href="#%E8%AE%A4%E8%AF%86-npm-%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>每一个 node package 都有自己的版本号，一般定义在项目的 <code>package.json</code> 中，如：</p>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"express"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Fast, unopinionated, minimalist web framework"</span><span class="token punctuation">,</span>\n  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4.12.3"</span><span class="token punctuation">,</span>\n  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"TJ Holowaychuk &lt;<a class="token email-link" href="mailto:tj@vision">tj@vision</a>-media.ca>"</span><span class="token punctuation">,</span>\n  <span class="token property">"..."</span><span class="token operator">:</span> <span class="token string">"..."</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="%E7%89%88%E6%9C%AC%E5%8F%B7%E7%9A%84%E6%A0%BC%E5%BC%8F">版本号的格式<a class="anchor" href="#%E7%89%88%E6%9C%AC%E5%8F%B7%E7%9A%84%E6%A0%BC%E5%BC%8F">§</a></h2>\n<p><a href="https://npmjs.com">npm</a> 基本遵守 <a href="http://semver.org">semver</a> 语义化版本号的规则，使用 <a href="https://github.com/npm/node-semver">node-semver</a> 来解析版本号。</p>\n<p>一般来说，一个版本号包含三个部分：</p>\n<pre class="language-autoit"><code class="language-autoit">MAJOR<span class="token punctuation">.</span>MINOR<span class="token punctuation">.</span>PATCH\n</code></pre>\n<p>MAJOR 表示主版本号，MINOR 表示次版本号，PATCH 表示修订号。</p>\n<p>它们的取值为非负整数，若大于零，不能在前方补零。</p>\n<p>另外版本号中任何位置都不能有空格。</p>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7pre-release-version">先行版本号（Pre-release Version）<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7pre-release-version">§</a></h3>\n<p>作为额外规则，先行版本号可以作为发布正式版之前的版本，格式是在修订版本号后面加上一个连接号（<code>-</code>），再加上一连串以点（<code>.</code>）分割的标识符，标识符可以由英文、数字和连接号（<code>[0-9A-Za-z-]</code>）组成。</p>\n<p>同样若数字大于零，不能在前方补零，版本号中任何位置都不能有空格。</p>\n<p>举例如下：</p>\n<pre class="language-shell"><code class="language-shell"><span class="token number">1.0</span>​​.0-alpha\n<span class="token number">1.0</span>.0-alpha.1\n<span class="token number">1.0</span>.0-0.3.7\n<span class="token number">1.0</span>.0-x.7.z.92\n</code></pre>\n<p>另外，以下列出了一些常见的先行版本号名称：</p>\n<ul>\n<li><code>alpha</code></li>\n<li><code>beta</code></li>\n<li><code>rc</code></li>\n</ul>\n<h3 id="%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AFbuild-metadata">版本编译信息（Build Metadata）<a class="anchor" href="#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AFbuild-metadata">§</a></h3>\n<p>版本编译信息是另一个额外规则，格式是在修订版本号或先行版本号后面加上一个加号（<code>+</code>），再加上一连串以点（<code>.</code>）分割的标识符，标识符可以由英文、数字和连接号（<code>[0-9A-Za-z-]</code>）组成。</p>\n<p>版本号中任何位置都不能有空格（数字表示编译信息，是可以在开头存在多个零的）。</p>\n<p>举例如下：</p>\n<pre class="language-shell"><code class="language-shell"><span class="token number">1.0</span>.0-alpha+001\n<span class="token number">1.0</span>.0+20130313144700\n<span class="token number">1.0</span>.0-beta+exp.sha.5114f85\n</code></pre>\n<h3 id="%E4%B8%80%E4%BA%9B%E6%8B%93%E5%B1%95%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E5%88%99">一些拓展的版本号规则<a class="anchor" href="#%E4%B8%80%E4%BA%9B%E6%8B%93%E5%B1%95%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E5%88%99">§</a></h3>\n<p>以上为标准的 <a href="http://semver.org">semver</a> 规则。阅读 <a href="https://github.com/npm/node-semver">node-semver</a> 源码后，发现它对 <a href="http://semver.org">semver</a> 有了一些拓展：</p>\n<ol>\n<li>允许版本号中大于零的数字以零开头</li>\n<li>允许以 <code>v</code> 开头</li>\n<li>允许以 <code>=</code> 开头</li>\n<li>允许 <code>v</code> 或 <code>=</code> 与版本号之间有空字符串</li>\n<li>允许在开头包含空字符串</li>\n<li>上面四个规则中，<code>v</code>、<code>=</code> 和空字符串都允许出现多次</li>\n</ol>\n<p>更深入的讲，<a href="https://github.com/npm/node-semver">node-semver</a> 提供了两种模式，普通模式和宽松模式，普通模式包含了上面 2 的拓展，宽松模式包含了以上所有拓展。</p>\n<p><a href="https://npmjs.com">npm</a> 使用的是 <a href="http://semver.org">semver</a> 的宽松模式。</p>\n<p>具体内容可以阅读源码了解。</p>\n<h2 id="%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC%E5%8F%B7">如何升级版本号<a class="anchor" href="#%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>升级版本号的规则主要有三个：</p>\n<ol>\n<li>主版本号：当你做了不兼容的 API 修改</li>\n<li>次版本号：当你做了向下兼容的功能性新增</li>\n<li>修订号：当你做了向下兼容的问题修正</li>\n</ol>\n<h3 id="%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">开发阶段的版本号<a class="anchor" href="#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h3>\n<p>主版本号为零的时候，属于开发阶段，一切都可能随时改变，故以上三个规则也不一定适用。</p>\n<p>一般来说，修订号的修改仍然保持向下兼容，但是次版本号就不一定向下兼容了。</p>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7">先行版本号<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h3>\n<p>先行版本号一般用于发布一个新的主版本号（比如 <code>1.0.0</code>、<code>2.0.0</code>、<code>3.0.0</code>）之前，同样是不一定兼容的。</p>\n<h3 id="%E5%8F%A6%E4%B8%80%E4%BA%9B%E7%9A%84%E8%A7%84%E5%88%99">另一些的规则<a class="anchor" href="#%E5%8F%A6%E4%B8%80%E4%BA%9B%E7%9A%84%E8%A7%84%E5%88%99">§</a></h3>\n<ol>\n<li>任何时候都禁止修改已发布的版本的内容，任何修改都必须以新版本发布</li>\n<li>次版本号的升级，必须把修订号归零</li>\n<li>主版本号的升级，必须把次版本号和修订号归零</li>\n</ol>\n<h2 id="%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">如何正确的定义依赖的版本号<a class="anchor" href="#%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>在 node package 中，经常需要依赖一些 <a href="https://npmjs.com">npmjs.com</a> 上的资源，使用 <code>npm install express --save</code> 或 <code>npm install express --save-dev</code> 即可在安装的同时，把依赖关系写入 <code>package.json</code> 的 <code>dependencies</code> 或 <code>devDependencies</code> 中。</p>\n<pre class="language-autoit"><code class="language-autoit">  <span class="token string">"dependencies"</span><span class="token punctuation">:</span> {\n    <span class="token string">"express"</span><span class="token punctuation">:</span> <span class="token string">"^4.12.3"</span>\n  }<span class="token punctuation">,</span>\n</code></pre>\n<p>默认会在版本号前面加上一个 <code>^</code>，在 <a href="https://npmjs.com">npm</a> 的依赖的规则中，还有 <code>~</code>、<code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>-</code>、<code>||</code>、<code>x</code>、<code>X</code>、<code>*</code> 等符号，下面会一一解释。</p>\n<h3 id=""><code>^</code><a class="anchor" href="#">§</a></h3>\n<p>表示同一主版本号中，不小于指定版本号的版本号。</p>\n<p>举例如下：</p>\n<ul>\n<li><code>^2.2.1</code> 对应主版本号为 2，不小于 <code>2.2.1</code> 的版本号，比如 <code>2.2.1</code>、<code>2.2.2</code>、<code>2.3.0</code></li>\n</ul>\n<h3 id="-1"><code>~</code><a class="anchor" href="#-1">§</a></h3>\n<p>表示同一主版本号和次版本号中，不小于指定版本号的版本号。举例如下：</p>\n<ul>\n<li><code>~2.2.1</code> 对应主版本号为 2，次版本号为 2，不小于 <code>2.2.1</code> 的版本号，比如 <code>2.2.1、2.2.2</code></li>\n</ul>\n<h3 id="-"><code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>-</code><a class="anchor" href="#-">§</a></h3>\n<p>用来指定一个版本号范围。举例如下：</p>\n<ul>\n<li><code>&gt;2.1</code></li>\n<li><code>1.0.0 - 1.2.0</code></li>\n</ul>\n<p>注意使用 <code>-</code> 的时候，必须两边都有空格。</p>\n<h3 id="-2"><code>||</code><a class="anchor" href="#-2">§</a></h3>\n<p>表示或，举例如下：</p>\n<ul>\n<li><code>^2 &lt;2.2 || &gt; 2.3</code></li>\n</ul>\n<h3 id="xx"><code>x</code>、<code>X</code>、<code>*</code><a class="anchor" href="#xx">§</a></h3>\n<p>表示通配符，举例如下：</p>\n<ul>\n<li><code>*</code> 对应所有版本号</li>\n<li><code>3.x</code> 对应所有主版本号为 3 的版本号</li>\n</ul>\n<h3 id="%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7-1">开发阶段的版本号<a class="anchor" href="#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7-1">§</a></h3>\n<p>开发阶段的版本号有一些例外：</p>\n<p><code>^</code> 和 <code>~</code> 表示同一个意思：主版本号和次版本号都相同，不小于指定版本号。举例如下：</p>\n<ul>\n<li><code>^0.1.0</code> 对应主版本号为 0，次版本号为 1，不小于 <code>0.1.0</code> 的版本号，比如 <code>0.1.0</code>，<code>0.1.1</code></li>\n</ul>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7-1">先行版本号<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7-1">§</a></h3>\n<p>先行版本号也有一些例外：</p>\n<p>只有以下几种方式可以匹配到先行版本号：</p>\n<ol>\n<li>精确的指定版本号，如：<code>1.0.0-alpha.1</code></li>\n<li>使用 <code>&gt;</code> 指定范围，如：<code>&gt;1.0.0-alpha</code>、<code>&gt;=1.0.0-rc.0 &lt;1.0.1</code></li>\n<li>使用 <code>x</code>、<code>X</code>、<code>*</code> 指定所有版本号，如：<code>*</code></li>\n</ol>\n<h3 id="%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AF">版本编译信息<a class="anchor" href="#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AF">§</a></h3>\n<p>版本编译信息在判断匹配版本号的时候会被忽略，举例如下：</p>\n<ul>\n<li><code>3.0.2+20130313144700</code> 会匹配到 <code>3.0.2</code></li>\n</ul>\n<h2 id="%E6%9C%AC%E6%96%87%E5%8F%82%E8%80%83%E7%9A%84%E7%89%88%E6%9C%AC">本文参考的版本<a class="anchor" href="#%E6%9C%AC%E6%96%87%E5%8F%82%E8%80%83%E7%9A%84%E7%89%88%E6%9C%AC">§</a></h2>\n<p>本文书写时（2015-04-14），参考的版本号分别为：</p>\n<ul>\n<li><a href="https://github.com/npm/npm/tree/v2.7.6">npm@2.7.6</a></li>\n<li><a href="http://semver.org/spec/v2.0.0.html">semver.org@2.0.0</a></li>\n<li><a href="https://github.com/npm/node-semver/tree/v4.3.3">semver@4.3.3</a></li>\n</ul>\n<p>若将来版本更新后有变，本文以以上版本号为准。</p>\n<h2 id="links">Links<a class="anchor" href="#links">§</a></h2>\n<ul>\n<li><a href="https://npmjs.com">npm</a></li>\n<li><a href="http://semver.org">semver</a></li>\n<li><a href="https://github.com/npm/node-semver">node-semver</a></li>\n<li><a href="http://semver.org/">http://semver.org/</a></li>\n<li><a href="http://semver.org/lang/zh-CN/">http://semver.org/lang/zh-CN/</a></li>\n<li><a href="http://semver.npmjs.com/">http://semver.npmjs.com/</a></li>\n<li><a href="https://docs.npmjs.com/getting-started/semantic-versioning">https://docs.npmjs.com/getting-started/semantic-versioning</a></li>\n<li><a href="https://docs.npmjs.com/misc/semver">https://docs.npmjs.com/misc/semver</a></li>\n</ul>'
        } }),
    'head': null,
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "npm \u8BED\u4E49\u5316\u7248\u672C\u53F7"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<blockquote>\n<p>本文开始介绍了 <a href="https://npmjs.com">npm</a> 中语义化版本号的格式，然后对如何升级版本号进行了归纳，最后总结了如何正确的定义依赖的版本号。</p>\n</blockquote>\n<h2 id="%E8%AE%A4%E8%AF%86-npm-%E7%89%88%E6%9C%AC%E5%8F%B7">认识 <a href="https://npmjs.com">npm</a> 版本号<a class="anchor" href="#%E8%AE%A4%E8%AF%86-npm-%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>每一个 node package 都有自己的版本号，一般定义在项目的 <code>package.json</code> 中，如：</p>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"express"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Fast, unopinionated, minimalist web framework"</span><span class="token punctuation">,</span>\n  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4.12.3"</span><span class="token punctuation">,</span>\n  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"TJ Holowaychuk &lt;<a class="token email-link" href="mailto:tj@vision">tj@vision</a>-media.ca>"</span><span class="token punctuation">,</span>\n  <span class="token property">"..."</span><span class="token operator">:</span> <span class="token string">"..."</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="%E7%89%88%E6%9C%AC%E5%8F%B7%E7%9A%84%E6%A0%BC%E5%BC%8F">版本号的格式<a class="anchor" href="#%E7%89%88%E6%9C%AC%E5%8F%B7%E7%9A%84%E6%A0%BC%E5%BC%8F">§</a></h2>\n<p><a href="https://npmjs.com">npm</a> 基本遵守 <a href="http://semver.org">semver</a> 语义化版本号的规则，使用 <a href="https://github.com/npm/node-semver">node-semver</a> 来解析版本号。</p>\n<p>一般来说，一个版本号包含三个部分：</p>\n<pre class="language-autoit"><code class="language-autoit">MAJOR<span class="token punctuation">.</span>MINOR<span class="token punctuation">.</span>PATCH\n</code></pre>\n<p>MAJOR 表示主版本号，MINOR 表示次版本号，PATCH 表示修订号。</p>\n<p>它们的取值为非负整数，若大于零，不能在前方补零。</p>\n<p>另外版本号中任何位置都不能有空格。</p>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7pre-release-version">先行版本号（Pre-release Version）<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7pre-release-version">§</a></h3>\n<p>作为额外规则，先行版本号可以作为发布正式版之前的版本，格式是在修订版本号后面加上一个连接号（<code>-</code>），再加上一连串以点（<code>.</code>）分割的标识符，标识符可以由英文、数字和连接号（<code>[0-9A-Za-z-]</code>）组成。</p>\n<p>同样若数字大于零，不能在前方补零，版本号中任何位置都不能有空格。</p>\n<p>举例如下：</p>\n<pre class="language-shell"><code class="language-shell"><span class="token number">1.0</span>​​.0-alpha\n<span class="token number">1.0</span>.0-alpha.1\n<span class="token number">1.0</span>.0-0.3.7\n<span class="token number">1.0</span>.0-x.7.z.92\n</code></pre>\n<p>另外，以下列出了一些常见的先行版本号名称：</p>\n<ul>\n<li><code>alpha</code></li>\n<li><code>beta</code></li>\n<li><code>rc</code></li>\n</ul>\n<h3 id="%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AFbuild-metadata">版本编译信息（Build Metadata）<a class="anchor" href="#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AFbuild-metadata">§</a></h3>\n<p>版本编译信息是另一个额外规则，格式是在修订版本号或先行版本号后面加上一个加号（<code>+</code>），再加上一连串以点（<code>.</code>）分割的标识符，标识符可以由英文、数字和连接号（<code>[0-9A-Za-z-]</code>）组成。</p>\n<p>版本号中任何位置都不能有空格（数字表示编译信息，是可以在开头存在多个零的）。</p>\n<p>举例如下：</p>\n<pre class="language-shell"><code class="language-shell"><span class="token number">1.0</span>.0-alpha+001\n<span class="token number">1.0</span>.0+20130313144700\n<span class="token number">1.0</span>.0-beta+exp.sha.5114f85\n</code></pre>\n<h3 id="%E4%B8%80%E4%BA%9B%E6%8B%93%E5%B1%95%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E5%88%99">一些拓展的版本号规则<a class="anchor" href="#%E4%B8%80%E4%BA%9B%E6%8B%93%E5%B1%95%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E5%88%99">§</a></h3>\n<p>以上为标准的 <a href="http://semver.org">semver</a> 规则。阅读 <a href="https://github.com/npm/node-semver">node-semver</a> 源码后，发现它对 <a href="http://semver.org">semver</a> 有了一些拓展：</p>\n<ol>\n<li>允许版本号中大于零的数字以零开头</li>\n<li>允许以 <code>v</code> 开头</li>\n<li>允许以 <code>=</code> 开头</li>\n<li>允许 <code>v</code> 或 <code>=</code> 与版本号之间有空字符串</li>\n<li>允许在开头包含空字符串</li>\n<li>上面四个规则中，<code>v</code>、<code>=</code> 和空字符串都允许出现多次</li>\n</ol>\n<p>更深入的讲，<a href="https://github.com/npm/node-semver">node-semver</a> 提供了两种模式，普通模式和宽松模式，普通模式包含了上面 2 的拓展，宽松模式包含了以上所有拓展。</p>\n<p><a href="https://npmjs.com">npm</a> 使用的是 <a href="http://semver.org">semver</a> 的宽松模式。</p>\n<p>具体内容可以阅读源码了解。</p>\n<h2 id="%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC%E5%8F%B7">如何升级版本号<a class="anchor" href="#%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>升级版本号的规则主要有三个：</p>\n<ol>\n<li>主版本号：当你做了不兼容的 API 修改</li>\n<li>次版本号：当你做了向下兼容的功能性新增</li>\n<li>修订号：当你做了向下兼容的问题修正</li>\n</ol>\n<h3 id="%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">开发阶段的版本号<a class="anchor" href="#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h3>\n<p>主版本号为零的时候，属于开发阶段，一切都可能随时改变，故以上三个规则也不一定适用。</p>\n<p>一般来说，修订号的修改仍然保持向下兼容，但是次版本号就不一定向下兼容了。</p>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7">先行版本号<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h3>\n<p>先行版本号一般用于发布一个新的主版本号（比如 <code>1.0.0</code>、<code>2.0.0</code>、<code>3.0.0</code>）之前，同样是不一定兼容的。</p>\n<h3 id="%E5%8F%A6%E4%B8%80%E4%BA%9B%E7%9A%84%E8%A7%84%E5%88%99">另一些的规则<a class="anchor" href="#%E5%8F%A6%E4%B8%80%E4%BA%9B%E7%9A%84%E8%A7%84%E5%88%99">§</a></h3>\n<ol>\n<li>任何时候都禁止修改已发布的版本的内容，任何修改都必须以新版本发布</li>\n<li>次版本号的升级，必须把修订号归零</li>\n<li>主版本号的升级，必须把次版本号和修订号归零</li>\n</ol>\n<h2 id="%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">如何正确的定义依赖的版本号<a class="anchor" href="#%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7">§</a></h2>\n<p>在 node package 中，经常需要依赖一些 <a href="https://npmjs.com">npmjs.com</a> 上的资源，使用 <code>npm install express --save</code> 或 <code>npm install express --save-dev</code> 即可在安装的同时，把依赖关系写入 <code>package.json</code> 的 <code>dependencies</code> 或 <code>devDependencies</code> 中。</p>\n<pre class="language-autoit"><code class="language-autoit">  <span class="token string">"dependencies"</span><span class="token punctuation">:</span> {\n    <span class="token string">"express"</span><span class="token punctuation">:</span> <span class="token string">"^4.12.3"</span>\n  }<span class="token punctuation">,</span>\n</code></pre>\n<p>默认会在版本号前面加上一个 <code>^</code>，在 <a href="https://npmjs.com">npm</a> 的依赖的规则中，还有 <code>~</code>、<code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>-</code>、<code>||</code>、<code>x</code>、<code>X</code>、<code>*</code> 等符号，下面会一一解释。</p>\n<h3 id=""><code>^</code><a class="anchor" href="#">§</a></h3>\n<p>表示同一主版本号中，不小于指定版本号的版本号。</p>\n<p>举例如下：</p>\n<ul>\n<li><code>^2.2.1</code> 对应主版本号为 2，不小于 <code>2.2.1</code> 的版本号，比如 <code>2.2.1</code>、<code>2.2.2</code>、<code>2.3.0</code></li>\n</ul>\n<h3 id="-1"><code>~</code><a class="anchor" href="#-1">§</a></h3>\n<p>表示同一主版本号和次版本号中，不小于指定版本号的版本号。举例如下：</p>\n<ul>\n<li><code>~2.2.1</code> 对应主版本号为 2，次版本号为 2，不小于 <code>2.2.1</code> 的版本号，比如 <code>2.2.1、2.2.2</code></li>\n</ul>\n<h3 id="-"><code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>-</code><a class="anchor" href="#-">§</a></h3>\n<p>用来指定一个版本号范围。举例如下：</p>\n<ul>\n<li><code>&gt;2.1</code></li>\n<li><code>1.0.0 - 1.2.0</code></li>\n</ul>\n<p>注意使用 <code>-</code> 的时候，必须两边都有空格。</p>\n<h3 id="-2"><code>||</code><a class="anchor" href="#-2">§</a></h3>\n<p>表示或，举例如下：</p>\n<ul>\n<li><code>^2 &lt;2.2 || &gt; 2.3</code></li>\n</ul>\n<h3 id="xx"><code>x</code>、<code>X</code>、<code>*</code><a class="anchor" href="#xx">§</a></h3>\n<p>表示通配符，举例如下：</p>\n<ul>\n<li><code>*</code> 对应所有版本号</li>\n<li><code>3.x</code> 对应所有主版本号为 3 的版本号</li>\n</ul>\n<h3 id="%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7-1">开发阶段的版本号<a class="anchor" href="#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7-1">§</a></h3>\n<p>开发阶段的版本号有一些例外：</p>\n<p><code>^</code> 和 <code>~</code> 表示同一个意思：主版本号和次版本号都相同，不小于指定版本号。举例如下：</p>\n<ul>\n<li><code>^0.1.0</code> 对应主版本号为 0，次版本号为 1，不小于 <code>0.1.0</code> 的版本号，比如 <code>0.1.0</code>，<code>0.1.1</code></li>\n</ul>\n<h3 id="%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7-1">先行版本号<a class="anchor" href="#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7-1">§</a></h3>\n<p>先行版本号也有一些例外：</p>\n<p>只有以下几种方式可以匹配到先行版本号：</p>\n<ol>\n<li>精确的指定版本号，如：<code>1.0.0-alpha.1</code></li>\n<li>使用 <code>&gt;</code> 指定范围，如：<code>&gt;1.0.0-alpha</code>、<code>&gt;=1.0.0-rc.0 &lt;1.0.1</code></li>\n<li>使用 <code>x</code>、<code>X</code>、<code>*</code> 指定所有版本号，如：<code>*</code></li>\n</ol>\n<h3 id="%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AF">版本编译信息<a class="anchor" href="#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AF">§</a></h3>\n<p>版本编译信息在判断匹配版本号的时候会被忽略，举例如下：</p>\n<ul>\n<li><code>3.0.2+20130313144700</code> 会匹配到 <code>3.0.2</code></li>\n</ul>\n<h2 id="%E6%9C%AC%E6%96%87%E5%8F%82%E8%80%83%E7%9A%84%E7%89%88%E6%9C%AC">本文参考的版本<a class="anchor" href="#%E6%9C%AC%E6%96%87%E5%8F%82%E8%80%83%E7%9A%84%E7%89%88%E6%9C%AC">§</a></h2>\n<p>本文书写时（2015-04-14），参考的版本号分别为：</p>\n<ul>\n<li><a href="https://github.com/npm/npm/tree/v2.7.6">npm@2.7.6</a></li>\n<li><a href="http://semver.org/spec/v2.0.0.html">semver.org@2.0.0</a></li>\n<li><a href="https://github.com/npm/node-semver/tree/v4.3.3">semver@4.3.3</a></li>\n</ul>\n<p>若将来版本更新后有变，本文以以上版本号为准。</p>\n<h2 id="links">Links<a class="anchor" href="#links">§</a></h2>\n<ul>\n<li><a href="https://npmjs.com">npm</a></li>\n<li><a href="http://semver.org">semver</a></li>\n<li><a href="https://github.com/npm/node-semver">node-semver</a></li>\n<li><a href="http://semver.org/">http://semver.org/</a></li>\n<li><a href="http://semver.org/lang/zh-CN/">http://semver.org/lang/zh-CN/</a></li>\n<li><a href="http://semver.npmjs.com/">http://semver.npmjs.com/</a></li>\n<li><a href="https://docs.npmjs.com/getting-started/semantic-versioning">https://docs.npmjs.com/getting-started/semantic-versioning</a></li>\n<li><a href="https://docs.npmjs.com/misc/semver">https://docs.npmjs.com/misc/semver</a></li>\n</ul>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#%E8%AE%A4%E8%AF%86-npm-%E7%89%88%E6%9C%AC%E5%8F%B7" }, "\u8BA4\u8BC6 npm \u7248\u672C\u53F7")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E7%89%88%E6%9C%AC%E5%8F%B7%E7%9A%84%E6%A0%BC%E5%BC%8F" }, "\u7248\u672C\u53F7\u7684\u683C\u5F0F"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7pre-release-version" }, "\u5148\u884C\u7248\u672C\u53F7\uFF08Pre-release Version\uFF09")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AFbuild-metadata" }, "\u7248\u672C\u7F16\u8BD1\u4FE1\u606F\uFF08Build Metadata\uFF09")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E4%B8%80%E4%BA%9B%E6%8B%93%E5%B1%95%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E8%A7%84%E5%88%99" }, "\u4E00\u4E9B\u62D3\u5C55\u7684\u7248\u672C\u53F7\u89C4\u5219")))),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC%E5%8F%B7" }, "\u5982\u4F55\u5347\u7EA7\u7248\u672C\u53F7"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7" }, "\u5F00\u53D1\u9636\u6BB5\u7684\u7248\u672C\u53F7")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7" }, "\u5148\u884C\u7248\u672C\u53F7")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%8F%A6%E4%B8%80%E4%BA%9B%E7%9A%84%E8%A7%84%E5%88%99" }, "\u53E6\u4E00\u4E9B\u7684\u89C4\u5219")))),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7" }, "\u5982\u4F55\u6B63\u786E\u7684\u5B9A\u4E49\u4F9D\u8D56\u7684\u7248\u672C\u53F7"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#" }, "^")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#-1" }, "~")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#-" }, `>、<、=、>=、<=、-`)),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#-2" }, "||")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#xx" }, "x\u3001X\u3001*")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7-1" }, "\u5F00\u53D1\u9636\u6BB5\u7684\u7248\u672C\u53F7")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E5%85%88%E8%A1%8C%E7%89%88%E6%9C%AC%E5%8F%B7-1" }, "\u5148\u884C\u7248\u672C\u53F7")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E4%BF%A1%E6%81%AF" }, "\u7248\u672C\u7F16\u8BD1\u4FE1\u606F")))),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E6%9C%AC%E6%96%87%E5%8F%82%E8%80%83%E7%9A%84%E7%89%88%E6%9C%AC" }, "\u672C\u6587\u53C2\u8003\u7684\u7248\u672C")),
            React.createElement("li", null,
                React.createElement("a", { href: "#links" }, "Links")))),
    'author': undefined,
    'contributors': [],
    'date': "2015-04-14T00:00:00.000Z",
    'updated': null,
    'excerpt': "认识 npm 版本号 每一个 node package 都有自己的版本号，一般定义在项目的 package.json 中，如： { \"name\": \"express\", \"description\": \"Fast, unopinionated, minimalist web framework\", \"version\": \"4.12.3\", \"author\": \"...",
    'cover': undefined,
    'categories': [
        "编程世界"
    ],
    'tags': [
        "语义化",
        "npm",
        "JavaScript"
    ],
    'blog': {
        "isPost": false,
        "posts": [],
        "categories": [],
        "tags": []
    }
};
