import projectConfig from '/pagic.config.js';
export default {
    config: { "root": "/", ...projectConfig, branch: '' },
    'pagePath': "posts/eslint-config-alloy.md",
    'layoutPath': "posts/_layout.tsx",
    'outputPath': "posts/eslint-config-alloy.html",
    'title': "我花了两个月时间，定制出了心目中「完美」的 ESLint 规则，我用四个空格缩进",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>我花了两个月时间，定制出了心目中「完美」的 ESLint 规则，我用四个空格缩进</h1>\n<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy">GitHub Repo</a></li>\n</ul>\n<p>本规则包含以下几种配置项：</p>\n<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/index.js">标准规则</a>：包含<a href="https://eslint.org/docs/rules/">所有 ESLint 规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/react.js">React 版</a>：在标准规则的基础上，增加了所有 <a href="https://github.com/yannickcr/eslint-plugin-react">eslint-plugin-react</a> 规则</li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/vue.js">Vue 版</a>：在标准规则的基础上，增加了所有 <a href="https://github.com/vuejs/eslint-plugin-vue">eslint-plugin-vue</a> 规则</li>\n</ul>\n<h2 id="%E9%85%8D%E7%BD%AE%E5%8E%9F%E5%88%99">配置原则<a class="anchor" href="#%E9%85%8D%E7%BD%AE%E5%8E%9F%E5%88%99">§</a></h2>\n<p>我们依据以下三条原则，研读了 ESLint 所有的配置项，定制出了心目中的「完美」ESLint 配置。</p>\n<ol>\n<li>能够帮助发现代码错误的规则，全部开启</li>\n<li>配置不应该依赖于某个具体项目，而应尽可能的合理</li>\n<li>帮助保持团队的代码风格统一，而不是限制开发体验</li>\n</ol>\n<h2 id="%E9%85%8D%E7%BD%AE%E8%A7%A3%E8%AF%BB">配置解读<a class="anchor" href="#%E9%85%8D%E7%BD%AE%E8%A7%A3%E8%AF%BB">§</a></h2>\n<p>我们对每一条配置，都有详尽的注释，这样不仅方便了我们自己查阅某项配置的意义和原因，也使大家更容易配置出自己心目中的规则：</p>\n<ul>\n<li>每一条配置都有注释说明此配置的用途</li>\n<li>对于理解困难的配置，都在注释中有举例</li>\n<li>对于有争议的配置，都在注释中说明了为什么要这么配置的原因</li>\n<li>对于关闭掉的配置，都在注释中有对应的原因说明，以及 <code>@off</code> 的标识</li>\n<li>对于能够 autofix 的配置，都在注释中有标注 <code>@autofix</code></li>\n</ul>\n<p>详细的配置内容在这里：</p>\n<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/index.js">ESLint 标准规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/react.js">eslint-plugin-react 规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/vue.js">eslint-plugin-vue 规则</a></li>\n</ul>\n<p>下面列出一个代码片段供参考：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    parser<span class="token operator">:</span> <span class="token string">\'babel-eslint\'</span><span class="token punctuation">,</span>\n    parserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        ecmaVersion<span class="token operator">:</span> <span class="token number">2017</span><span class="token punctuation">,</span>\n        sourceType<span class="token operator">:</span> <span class="token string">\'module\'</span><span class="token punctuation">,</span>\n        ecmaFeatures<span class="token operator">:</span> <span class="token punctuation">{</span>\n            experimentalObjectRestSpread<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            jsx<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    env<span class="token operator">:</span> <span class="token punctuation">{</span>\n        browser<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        node<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        commonjs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        es6<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 以当前目录为根目录，不再向上查找 .eslintrc.js</span>\n    root<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">//</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// 可能的错误</span>\n        <span class="token comment">// 这些规则与 JavaScript 代码中可能的语法错误或逻辑错误有关</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// 禁止 for 循环出现方向错误的循环，比如 for (i = 0; i &lt; 10; i--)</span>\n        <span class="token string">\'for-direction\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// getter 必须有返回值，并且禁止返回空，比如 return;</span>\n        <span class="token string">\'getter-return\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                allowImplicit<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了</span>\n        <span class="token comment">// @off 要求太严格了，有时需要在循环中写 await</span>\n        <span class="token string">\'no-await-in-loop\'</span><span class="token operator">:</span> <span class="token string">\'off\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止与负零进行比较</span>\n        <span class="token string">\'no-compare-neg-zero\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在 if, for, while 里使用赋值语句，除非这个赋值语句被括号包起来了</span>\n        <span class="token string">\'no-cond-assign\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'except-parens\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止使用 console</span>\n        <span class="token comment">// @off console 的使用很常见</span>\n        <span class="token string">\'no-console\'</span><span class="token operator">:</span> <span class="token string">\'off\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止将常量作为 if, for, while 里的测试条件，比如 if (true), for (;;)，除非循环内部有 break 语句</span>\n        <span class="token string">\'no-constant-condition\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                checkLoops<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\x1f/</span>\n        <span class="token comment">// 开启此规则，因为字符串中一般不会出现 Ctrl 键，所以一旦出现了，可能是一个代码错误</span>\n        <span class="token string">\'no-control-regex\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// @fixable 禁止使用 debugger</span>\n        <span class="token string">\'no-debugger\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在函数参数中出现重复名称的参数</span>\n        <span class="token string">\'no-dupe-args\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在对象字面量中出现重复名称的键名</span>\n        <span class="token string">\'no-dupe-keys\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">使用方法<a class="anchor" href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">§</a></h2>\n<h3 id="%E6%A0%87%E5%87%86%E8%A7%84%E5%88%99">标准规则<a class="anchor" href="#%E6%A0%87%E5%87%86%E8%A7%84%E5%88%99">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// jQuery: false,</span>\n        <span class="token comment">// $: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="react-%E7%89%88">React 版<a class="anchor" href="#react-%E7%89%88">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85-1">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85-1">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy eslint-plugin-react babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs-1">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs-1">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy/react\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// React: false,</span>\n        <span class="token comment">// ReactDOM: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ],</span>\n        <span class="token comment">// // @fixable jsx 的 children 缩进必须为两个空格</span>\n        <span class="token comment">// \'react/jsx-indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2</span>\n        <span class="token comment">// ],</span>\n        <span class="token comment">// // @fixable jsx 的 props 缩进必须为两个空格</span>\n        <span class="token comment">// \'react/jsx-indent-props\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="vue-%E7%89%88">Vue 版<a class="anchor" href="#vue-%E7%89%88">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85-2">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85-2">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy eslint-plugin-vue babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs-2">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs-2">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy/vue\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// Vue: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h4 id="%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8">在VSCode中使用<a class="anchor" href="#%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8">§</a></h4>\n<p>在VSCode中，默认有可能并不识别 <code>.vue</code> 文件，你需要做如下配置。</p>\n<pre class="language-autoit"><code class="language-autoit">文件 <span class="token operator">=</span><span class="token operator">></span> 首选项 <span class="token operator">=</span><span class="token operator">></span> 设置 \n\n做如下配置，便可支持ESLint检测 <span class="token punctuation">.</span>vue 文件\n{\n    <span class="token string">"eslint.validate"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token string">"javascript"</span><span class="token punctuation">,</span>\n        <span class="token string">"javascriptreact"</span><span class="token punctuation">,</span>\n        <span class="token string">"html"</span><span class="token punctuation">,</span>\n        <span class="token string">"vue"</span>\n    <span class="token punctuation">]</span>\n}\n</code></pre>\n<h2 id="testing">Testing<a class="anchor" href="#testing">§</a></h2>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token builtin class-name">test</span>\n</code></pre>\n<h2 id="links">Links<a class="anchor" href="#links">§</a></h2>\n<ul>\n<li><a href="http://alloyteam.github.io/CodeGuide">Alloyteam Code Guide</a></li>\n<li><a href="http://eslint.org/docs/user-guide/configuring">ESlint Code Guide</a></li>\n<li><a href="http://eslint.org/docs/developer-guide/shareable-configs">ESlint Shareable Config</a></li>\n</ul>'
        } }),
    'head': null,
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "\u6211\u82B1\u4E86\u4E24\u4E2A\u6708\u65F6\u95F4\uFF0C\u5B9A\u5236\u51FA\u4E86\u5FC3\u76EE\u4E2D\u300C\u5B8C\u7F8E\u300D\u7684 ESLint \u89C4\u5219\uFF0C\u6211\u7528\u56DB\u4E2A\u7A7A\u683C\u7F29\u8FDB"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy">GitHub Repo</a></li>\n</ul>\n<p>本规则包含以下几种配置项：</p>\n<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/index.js">标准规则</a>：包含<a href="https://eslint.org/docs/rules/">所有 ESLint 规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/react.js">React 版</a>：在标准规则的基础上，增加了所有 <a href="https://github.com/yannickcr/eslint-plugin-react">eslint-plugin-react</a> 规则</li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/tree/master/vue.js">Vue 版</a>：在标准规则的基础上，增加了所有 <a href="https://github.com/vuejs/eslint-plugin-vue">eslint-plugin-vue</a> 规则</li>\n</ul>\n<h2 id="%E9%85%8D%E7%BD%AE%E5%8E%9F%E5%88%99">配置原则<a class="anchor" href="#%E9%85%8D%E7%BD%AE%E5%8E%9F%E5%88%99">§</a></h2>\n<p>我们依据以下三条原则，研读了 ESLint 所有的配置项，定制出了心目中的「完美」ESLint 配置。</p>\n<ol>\n<li>能够帮助发现代码错误的规则，全部开启</li>\n<li>配置不应该依赖于某个具体项目，而应尽可能的合理</li>\n<li>帮助保持团队的代码风格统一，而不是限制开发体验</li>\n</ol>\n<h2 id="%E9%85%8D%E7%BD%AE%E8%A7%A3%E8%AF%BB">配置解读<a class="anchor" href="#%E9%85%8D%E7%BD%AE%E8%A7%A3%E8%AF%BB">§</a></h2>\n<p>我们对每一条配置，都有详尽的注释，这样不仅方便了我们自己查阅某项配置的意义和原因，也使大家更容易配置出自己心目中的规则：</p>\n<ul>\n<li>每一条配置都有注释说明此配置的用途</li>\n<li>对于理解困难的配置，都在注释中有举例</li>\n<li>对于有争议的配置，都在注释中说明了为什么要这么配置的原因</li>\n<li>对于关闭掉的配置，都在注释中有对应的原因说明，以及 <code>@off</code> 的标识</li>\n<li>对于能够 autofix 的配置，都在注释中有标注 <code>@autofix</code></li>\n</ul>\n<p>详细的配置内容在这里：</p>\n<ul>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/index.js">ESLint 标准规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/react.js">eslint-plugin-react 规则</a></li>\n<li><a href="https://github.com/AlloyTeam/eslint-config-alloy/blob/master/vue.js">eslint-plugin-vue 规则</a></li>\n</ul>\n<p>下面列出一个代码片段供参考：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    parser<span class="token operator">:</span> <span class="token string">\'babel-eslint\'</span><span class="token punctuation">,</span>\n    parserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        ecmaVersion<span class="token operator">:</span> <span class="token number">2017</span><span class="token punctuation">,</span>\n        sourceType<span class="token operator">:</span> <span class="token string">\'module\'</span><span class="token punctuation">,</span>\n        ecmaFeatures<span class="token operator">:</span> <span class="token punctuation">{</span>\n            experimentalObjectRestSpread<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            jsx<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    env<span class="token operator">:</span> <span class="token punctuation">{</span>\n        browser<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        node<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        commonjs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        es6<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 以当前目录为根目录，不再向上查找 .eslintrc.js</span>\n    root<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">//</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// 可能的错误</span>\n        <span class="token comment">// 这些规则与 JavaScript 代码中可能的语法错误或逻辑错误有关</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// 禁止 for 循环出现方向错误的循环，比如 for (i = 0; i &lt; 10; i--)</span>\n        <span class="token string">\'for-direction\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// getter 必须有返回值，并且禁止返回空，比如 return;</span>\n        <span class="token string">\'getter-return\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                allowImplicit<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了</span>\n        <span class="token comment">// @off 要求太严格了，有时需要在循环中写 await</span>\n        <span class="token string">\'no-await-in-loop\'</span><span class="token operator">:</span> <span class="token string">\'off\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止与负零进行比较</span>\n        <span class="token string">\'no-compare-neg-zero\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在 if, for, while 里使用赋值语句，除非这个赋值语句被括号包起来了</span>\n        <span class="token string">\'no-cond-assign\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'except-parens\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止使用 console</span>\n        <span class="token comment">// @off console 的使用很常见</span>\n        <span class="token string">\'no-console\'</span><span class="token operator">:</span> <span class="token string">\'off\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止将常量作为 if, for, while 里的测试条件，比如 if (true), for (;;)，除非循环内部有 break 语句</span>\n        <span class="token string">\'no-constant-condition\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                checkLoops<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\x1f/</span>\n        <span class="token comment">// 开启此规则，因为字符串中一般不会出现 Ctrl 键，所以一旦出现了，可能是一个代码错误</span>\n        <span class="token string">\'no-control-regex\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// @fixable 禁止使用 debugger</span>\n        <span class="token string">\'no-debugger\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在函数参数中出现重复名称的参数</span>\n        <span class="token string">\'no-dupe-args\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 禁止在对象字面量中出现重复名称的键名</span>\n        <span class="token string">\'no-dupe-keys\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h2 id="%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">使用方法<a class="anchor" href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">§</a></h2>\n<h3 id="%E6%A0%87%E5%87%86%E8%A7%84%E5%88%99">标准规则<a class="anchor" href="#%E6%A0%87%E5%87%86%E8%A7%84%E5%88%99">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// jQuery: false,</span>\n        <span class="token comment">// $: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="react-%E7%89%88">React 版<a class="anchor" href="#react-%E7%89%88">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85-1">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85-1">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy eslint-plugin-react babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs-1">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs-1">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy/react\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// React: false,</span>\n        <span class="token comment">// ReactDOM: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ],</span>\n        <span class="token comment">// // @fixable jsx 的 children 缩进必须为两个空格</span>\n        <span class="token comment">// \'react/jsx-indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2</span>\n        <span class="token comment">// ],</span>\n        <span class="token comment">// // @fixable jsx 的 props 缩进必须为两个空格</span>\n        <span class="token comment">// \'react/jsx-indent-props\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="vue-%E7%89%88">Vue 版<a class="anchor" href="#vue-%E7%89%88">§</a></h3>\n<h4 id="%E5%AE%89%E8%A3%85-2">安装<a class="anchor" href="#%E5%AE%89%E8%A3%85-2">§</a></h4>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev eslint-config-alloy eslint-plugin-vue babel-eslint\n</code></pre>\n<h4 id="%E9%85%8D%E7%BD%AE-eslintrcjs-2">配置 .eslintrc.js<a class="anchor" href="#%E9%85%8D%E7%BD%AE-eslintrcjs-2">§</a></h4>\n<p>在你的项目根目录下创建 <code>.eslintrc.js</code>，并将以下内容复制到文件中：</p>\n<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'eslint-config-alloy/vue\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    globals<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的全局变量</span>\n        <span class="token comment">// 这里值为 false 表示这个全局变量不允许被重新赋值，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// Vue: false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里填入你的项目需要的个性化配置，比如：</span>\n        <span class="token comment">//</span>\n        <span class="token comment">// // @fixable 一个缩进必须用两个空格替代</span>\n        <span class="token comment">// \'indent\': [</span>\n        <span class="token comment">//     \'error\',</span>\n        <span class="token comment">//     2,</span>\n        <span class="token comment">//     {</span>\n        <span class="token comment">//         SwitchCase: 1,</span>\n        <span class="token comment">//         flatTernaryExpressions: true</span>\n        <span class="token comment">//     }</span>\n        <span class="token comment">// ]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h4 id="%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8">在VSCode中使用<a class="anchor" href="#%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8">§</a></h4>\n<p>在VSCode中，默认有可能并不识别 <code>.vue</code> 文件，你需要做如下配置。</p>\n<pre class="language-autoit"><code class="language-autoit">文件 <span class="token operator">=</span><span class="token operator">></span> 首选项 <span class="token operator">=</span><span class="token operator">></span> 设置 \n\n做如下配置，便可支持ESLint检测 <span class="token punctuation">.</span>vue 文件\n{\n    <span class="token string">"eslint.validate"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token string">"javascript"</span><span class="token punctuation">,</span>\n        <span class="token string">"javascriptreact"</span><span class="token punctuation">,</span>\n        <span class="token string">"html"</span><span class="token punctuation">,</span>\n        <span class="token string">"vue"</span>\n    <span class="token punctuation">]</span>\n}\n</code></pre>\n<h2 id="testing">Testing<a class="anchor" href="#testing">§</a></h2>\n<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token builtin class-name">test</span>\n</code></pre>\n<h2 id="links">Links<a class="anchor" href="#links">§</a></h2>\n<ul>\n<li><a href="http://alloyteam.github.io/CodeGuide">Alloyteam Code Guide</a></li>\n<li><a href="http://eslint.org/docs/user-guide/configuring">ESlint Code Guide</a></li>\n<li><a href="http://eslint.org/docs/developer-guide/shareable-configs">ESlint Shareable Config</a></li>\n</ul>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#%E9%85%8D%E7%BD%AE%E5%8E%9F%E5%88%99" }, "\u914D\u7F6E\u539F\u5219")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E9%85%8D%E7%BD%AE%E8%A7%A3%E8%AF%BB" }, "\u914D\u7F6E\u89E3\u8BFB")),
            React.createElement("li", null,
                React.createElement("a", { href: "#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95" }, "\u4F7F\u7528\u65B9\u6CD5"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E6%A0%87%E5%87%86%E8%A7%84%E5%88%99" }, "\u6807\u51C6\u89C4\u5219"),
                        React.createElement("ol", null)),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#react-%E7%89%88" }, "React \u7248"),
                        React.createElement("ol", null)),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#vue-%E7%89%88" }, "Vue \u7248"),
                        React.createElement("ol", null)))),
            React.createElement("li", null,
                React.createElement("a", { href: "#testing" }, "Testing")),
            React.createElement("li", null,
                React.createElement("a", { href: "#links" }, "Links")))),
    'author': undefined,
    'contributors': [],
    'date': "2017-08-25T00:00:00.000Z",
    'updated': null,
    'excerpt': "我们依据以下三条原则，研读了 ESLint 所有的配置项，定制出了心目中的「完美」ESLint 配置。",
    'cover': undefined,
    'categories': [
        "编程世界"
    ],
    'tags': [
        "ESLint"
    ],
    'links': {
        "v2ex": "https://v2ex.com/t/385804",
        "GitHub": "https://github.com/AlloyTeam/eslint-config-alloy"
    },
    'blog': {
        "isPost": false,
        "posts": [],
        "categories": [],
        "tags": []
    }
};
