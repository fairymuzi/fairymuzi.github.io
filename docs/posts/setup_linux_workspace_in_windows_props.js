import projectConfig from '/pagic.config.js';
export default {
    config: { "root": "/", ...projectConfig, branch: '' },
    'pagePath': "posts/setup_linux_workspace_in_windows.md",
    'layoutPath': "posts/_layout.tsx",
    'outputPath': "posts/setup_linux_workspace_in_windows.html",
    'title': "在 Windows 中配置 Linux 工作环境",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>在 Windows 中配置 Linux 工作环境</h1>\n<blockquote>\n<p>由于我的大部分项目都是基于 Linux 的，所以在 Windows 中配置一个 Linux 工作环境是非常有必要的（别问我为什么不用 MacBook 了 T_T）</p>\n</blockquote>\n<p>2016-05-20 更新：可以使用更加先进的 <a href="http://blog.xcatliu.com/2016/05/20/setup-linux-workspace-in-windows-using-hyper-v/">Hyper-V + Samba 方案</a>。</p>\n<p>要在 Windows 上使用 Linux，最方便最好用的就是装个虚拟机，再用 SSH 连上了。Linux 当然选择无图形界面的 Server 版，所以还需要能够方便的在 Windows 上访问到 Linux 上的文件。</p>\n<p>其中每一项都可以有很多选择，不过都是大同小异了。这里我选择的是 VituralBox + Ubuntu + PuTTY + Shared Folders。</p>\n<h2 id="vituralbox">VituralBox<a class="anchor" href="#vituralbox">§</a></h2>\n<p>官网：<a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a></p>\n<p>无需多介绍，开源免费小巧。装无图形界面的 Linux 足矣。安装比较简单，直接默认选项即可。需要注意的是，之后<strong>安装虚拟机的时候，最好存储在非系统盘</strong>，因为虚拟机可能会占用空间比较大，而且非系统盘不容易丢失。</p>\n<p>其他选择：<a href="http://www.vmware.com/">VMware</a></p>\n<h2 id="ubuntu">Ubuntu<a class="anchor" href="#ubuntu">§</a></h2>\n<p>官网：<a href="http://www.ubuntu.com/server">http://www.ubuntu.com/server</a></p>\n<p>Linux 中，Ubuntu 使用最广泛，比较适合新手，遇到问题基本都能 Google 出来。既然是在虚拟机中安装 Linux，那么图形界面实在没有多少用途了。纯命令行也很适合学习。</p>\n<p>安装 LTS 版本的 Ubuntu，可以获得五年的支持。所以我选择的是 <code>ubuntu-14.04.4-server-amd64</code>，不过听说 <code>16.04 LTS</code> 也快出了，应该使用起来差别不大吧。</p>\n<p>安装之前，<strong>需要把 Network 设置为 Bridged Adapter</strong>，这样子方便 Windows 端能够使用 PuTTY 连接上 Linux，也能够用浏览器通过 IP 访问 Linux 中的服务。</p>\n<blockquote>\n<p>Tip: 系统语言最好选英语，避免不必要的错误。</p>\n</blockquote>\n<p>安装完成后，登录系统，输入 <code>ifconfig</code> 查询 IP，记录下来。</p>\n<h2 id="putty">PuTTY<a class="anchor" href="#putty">§</a></h2>\n<p>官网：<a href="http://www.putty.org/">http://www.putty.org/</a></p>\n<p>PuTTY 是 Windows 上用于 SSH 连接的工具，使用很方便，输入 IP 即可。</p>\n<blockquote>\n<p>Tip: 如果想要保存自定义的配置，登录之后，打开设置，配置好之后，点 Default Settings，然后点击 Save 即可。</p>\n</blockquote>\n<blockquote>\n<p>Tip: 推荐使用 <a href="https://tmux.github.io/">tmux</a> 保存当前会话。</p>\n</blockquote>\n<h2 id="shared-folders">Shared Folders<a class="anchor" href="#shared-folders">§</a></h2>\n<p>共享文件夹之后，就可以用 Windows 上的编辑器（IDE）编辑 Linux 上的文件了。这个步骤比较复杂，配置过程中还遇到诸多问题，所以详细记录一下。</p>\n<h3 id="%E9%85%8D%E7%BD%AE-shared-folder">配置 Shared Folder<a class="anchor" href="#%E9%85%8D%E7%BD%AE-shared-folder">§</a></h3>\n<ol>\n<li>在 Windows 上创建一个 Folder <code>D:\Share</code></li>\n<li>关闭 Linux 系统</li>\n<li>配置 Linux 的 Shared Folders，添加一项，配置为 <code>D:\Share</code>，<strong>并且勾选 <code>Auto-mount</code>（重要）</strong>，会自动挂载到 <code>/media/sf_Share</code>。</li>\n</ol>\n<h3 id="%E8%AE%BF%E9%97%AE-shared-folder">访问 Shared Folder<a class="anchor" href="#%E8%AE%BF%E9%97%AE-shared-folder">§</a></h3>\n<p>如果尝试在 Linux 中访问 <code>/media/sf_Share</code>，会说无权限访问，是因为访问 <code>/media/sf_Share</code> 需要管理员权限。所以<strong>使用管理员权限运行</strong> VituralBox 即可。</p>\n<h3 id="%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5">无法创建软链接<a class="anchor" href="#%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5">§</a></h3>\n<p>在 Shared Folder 中，默认是无法创建软链接的，google 一下可以找到解决方案，但是依然无法解决问题，后经过研究，应该按照如下方式配置：</p>\n<ol>\n<li>打开 Windows 中的 cmd，进入 <code>C:\Program Files\Oracle\VirtualBox</code>，然后执行 <code>VBoxManage setextradata ubuntu VBoxInternal2/SharedFoldersEnableSymlinksCreate/Share 1</code>。注意，<code>ubuntu</code> 是你的机器名字，<code>Share</code> 是你共享文件夹的名字。</li>\n<li>设置完之后，需要重新启动 VirtualBox。如果还是不行，可以尝试先用非管理员模式启动 VirtualBox，再使用管理员模式启动即可。</li>\n</ol>\n<p>另外，取消刚刚的配置的命令是：<code>VBoxManage setextradata ubuntu VBoxInternal2/SharedFoldersEnableSymlinksCreate/Share</code>。\n查看有哪些配置的命令是：<code>VBoxManage getextradata ubuntu enumerate</code>。</p>\n<p>更多讨论请看：\n<a href="https://github.com/mitchellh/vagrant/issues/713">https://github.com/mitchellh/vagrant/issues/713</a>\n<a href="https://www.virtualbox.org/ticket/10085">https://www.virtualbox.org/ticket/10085</a></p>\n<p>至此，Linux 工作环境已经已经配置完毕，可以愉快的体验了！</p>\n<h2 id="next-step">Next Step<a class="anchor" href="#next-step">§</a></h2>\n<ul>\n<li>[x] 软链接还存在问题，有时候 Git 会显示有 Unstaged Change，但其实那是为了兼容 Linux 和 Windows 的软链接，而使文件多了一行内容。这个 Unstaged Change 无法被 Commit，也无法被 Checkout，所以对开发影响不大。但是有的脚本或者有的命令要求工作区是 Clear 的，这种情况就只能不在 Shared Folder 开发了。</li>\n<li>[ ] 可以试试 win10 的 Linux subsystem <a href="https://v2ex.com/member/beginor">@beginor</a></li>\n<li>[x] 可以试试在 linux 上安装 samba 服务，通过 windows 中的 “映射网络驱动器” 挂载到本地 windows 中，看起来就像是本机磁盘。 PHP 、 Python 这种动态语言项目放到这个磁盘里面，本地 IDE 编写代码， linux 上运行代码 <a href="https://v2ex.com/member/odirus">@odirus</a></li>\n<li>[ ] Vagrant <a href="https://v2ex.com/member/ljcarsenal">@ljcarsenal</a></li>\n<li>[ ] 可以加个 VBoxHeadlessTray ，再也不用担心 Windows 10 自动重启了 <a href="https://v2ex.com/member/ProjectAmber">@ProjectAmber</a></li>\n<li>[x] 推荐用 samba 进行， sharefolder 中安装某些 nodejs npm 包也会出问题，还有文件权限也是个问题，除了普通文件共享，不建议使用 <a href="https://v2ex.com/member/egen">@egen</a></li>\n<li>[ ] babun 体验更佳 <a href="https://v2ex.com/member/cyio">@cyio</a></li>\n<li>[x] Windows 10 的话直接用系统自带的 Hyper-V 就行了 <a href="https://v2ex.com/member/Kymair">@Kymair</a></li>\n</ul>'
        } }),
    'head': null,
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "\u5728 Windows \u4E2D\u914D\u7F6E Linux \u5DE5\u4F5C\u73AF\u5883"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<blockquote>\n<p>由于我的大部分项目都是基于 Linux 的，所以在 Windows 中配置一个 Linux 工作环境是非常有必要的（别问我为什么不用 MacBook 了 T_T）</p>\n</blockquote>\n<p>2016-05-20 更新：可以使用更加先进的 <a href="http://blog.xcatliu.com/2016/05/20/setup-linux-workspace-in-windows-using-hyper-v/">Hyper-V + Samba 方案</a>。</p>\n<p>要在 Windows 上使用 Linux，最方便最好用的就是装个虚拟机，再用 SSH 连上了。Linux 当然选择无图形界面的 Server 版，所以还需要能够方便的在 Windows 上访问到 Linux 上的文件。</p>\n<p>其中每一项都可以有很多选择，不过都是大同小异了。这里我选择的是 VituralBox + Ubuntu + PuTTY + Shared Folders。</p>\n<h2 id="vituralbox">VituralBox<a class="anchor" href="#vituralbox">§</a></h2>\n<p>官网：<a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a></p>\n<p>无需多介绍，开源免费小巧。装无图形界面的 Linux 足矣。安装比较简单，直接默认选项即可。需要注意的是，之后<strong>安装虚拟机的时候，最好存储在非系统盘</strong>，因为虚拟机可能会占用空间比较大，而且非系统盘不容易丢失。</p>\n<p>其他选择：<a href="http://www.vmware.com/">VMware</a></p>\n<h2 id="ubuntu">Ubuntu<a class="anchor" href="#ubuntu">§</a></h2>\n<p>官网：<a href="http://www.ubuntu.com/server">http://www.ubuntu.com/server</a></p>\n<p>Linux 中，Ubuntu 使用最广泛，比较适合新手，遇到问题基本都能 Google 出来。既然是在虚拟机中安装 Linux，那么图形界面实在没有多少用途了。纯命令行也很适合学习。</p>\n<p>安装 LTS 版本的 Ubuntu，可以获得五年的支持。所以我选择的是 <code>ubuntu-14.04.4-server-amd64</code>，不过听说 <code>16.04 LTS</code> 也快出了，应该使用起来差别不大吧。</p>\n<p>安装之前，<strong>需要把 Network 设置为 Bridged Adapter</strong>，这样子方便 Windows 端能够使用 PuTTY 连接上 Linux，也能够用浏览器通过 IP 访问 Linux 中的服务。</p>\n<blockquote>\n<p>Tip: 系统语言最好选英语，避免不必要的错误。</p>\n</blockquote>\n<p>安装完成后，登录系统，输入 <code>ifconfig</code> 查询 IP，记录下来。</p>\n<h2 id="putty">PuTTY<a class="anchor" href="#putty">§</a></h2>\n<p>官网：<a href="http://www.putty.org/">http://www.putty.org/</a></p>\n<p>PuTTY 是 Windows 上用于 SSH 连接的工具，使用很方便，输入 IP 即可。</p>\n<blockquote>\n<p>Tip: 如果想要保存自定义的配置，登录之后，打开设置，配置好之后，点 Default Settings，然后点击 Save 即可。</p>\n</blockquote>\n<blockquote>\n<p>Tip: 推荐使用 <a href="https://tmux.github.io/">tmux</a> 保存当前会话。</p>\n</blockquote>\n<h2 id="shared-folders">Shared Folders<a class="anchor" href="#shared-folders">§</a></h2>\n<p>共享文件夹之后，就可以用 Windows 上的编辑器（IDE）编辑 Linux 上的文件了。这个步骤比较复杂，配置过程中还遇到诸多问题，所以详细记录一下。</p>\n<h3 id="%E9%85%8D%E7%BD%AE-shared-folder">配置 Shared Folder<a class="anchor" href="#%E9%85%8D%E7%BD%AE-shared-folder">§</a></h3>\n<ol>\n<li>在 Windows 上创建一个 Folder <code>D:\Share</code></li>\n<li>关闭 Linux 系统</li>\n<li>配置 Linux 的 Shared Folders，添加一项，配置为 <code>D:\Share</code>，<strong>并且勾选 <code>Auto-mount</code>（重要）</strong>，会自动挂载到 <code>/media/sf_Share</code>。</li>\n</ol>\n<h3 id="%E8%AE%BF%E9%97%AE-shared-folder">访问 Shared Folder<a class="anchor" href="#%E8%AE%BF%E9%97%AE-shared-folder">§</a></h3>\n<p>如果尝试在 Linux 中访问 <code>/media/sf_Share</code>，会说无权限访问，是因为访问 <code>/media/sf_Share</code> 需要管理员权限。所以<strong>使用管理员权限运行</strong> VituralBox 即可。</p>\n<h3 id="%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5">无法创建软链接<a class="anchor" href="#%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5">§</a></h3>\n<p>在 Shared Folder 中，默认是无法创建软链接的，google 一下可以找到解决方案，但是依然无法解决问题，后经过研究，应该按照如下方式配置：</p>\n<ol>\n<li>打开 Windows 中的 cmd，进入 <code>C:\Program Files\Oracle\VirtualBox</code>，然后执行 <code>VBoxManage setextradata ubuntu VBoxInternal2/SharedFoldersEnableSymlinksCreate/Share 1</code>。注意，<code>ubuntu</code> 是你的机器名字，<code>Share</code> 是你共享文件夹的名字。</li>\n<li>设置完之后，需要重新启动 VirtualBox。如果还是不行，可以尝试先用非管理员模式启动 VirtualBox，再使用管理员模式启动即可。</li>\n</ol>\n<p>另外，取消刚刚的配置的命令是：<code>VBoxManage setextradata ubuntu VBoxInternal2/SharedFoldersEnableSymlinksCreate/Share</code>。\n查看有哪些配置的命令是：<code>VBoxManage getextradata ubuntu enumerate</code>。</p>\n<p>更多讨论请看：\n<a href="https://github.com/mitchellh/vagrant/issues/713">https://github.com/mitchellh/vagrant/issues/713</a>\n<a href="https://www.virtualbox.org/ticket/10085">https://www.virtualbox.org/ticket/10085</a></p>\n<p>至此，Linux 工作环境已经已经配置完毕，可以愉快的体验了！</p>\n<h2 id="next-step">Next Step<a class="anchor" href="#next-step">§</a></h2>\n<ul>\n<li>[x] 软链接还存在问题，有时候 Git 会显示有 Unstaged Change，但其实那是为了兼容 Linux 和 Windows 的软链接，而使文件多了一行内容。这个 Unstaged Change 无法被 Commit，也无法被 Checkout，所以对开发影响不大。但是有的脚本或者有的命令要求工作区是 Clear 的，这种情况就只能不在 Shared Folder 开发了。</li>\n<li>[ ] 可以试试 win10 的 Linux subsystem <a href="https://v2ex.com/member/beginor">@beginor</a></li>\n<li>[x] 可以试试在 linux 上安装 samba 服务，通过 windows 中的 “映射网络驱动器” 挂载到本地 windows 中，看起来就像是本机磁盘。 PHP 、 Python 这种动态语言项目放到这个磁盘里面，本地 IDE 编写代码， linux 上运行代码 <a href="https://v2ex.com/member/odirus">@odirus</a></li>\n<li>[ ] Vagrant <a href="https://v2ex.com/member/ljcarsenal">@ljcarsenal</a></li>\n<li>[ ] 可以加个 VBoxHeadlessTray ，再也不用担心 Windows 10 自动重启了 <a href="https://v2ex.com/member/ProjectAmber">@ProjectAmber</a></li>\n<li>[x] 推荐用 samba 进行， sharefolder 中安装某些 nodejs npm 包也会出问题，还有文件权限也是个问题，除了普通文件共享，不建议使用 <a href="https://v2ex.com/member/egen">@egen</a></li>\n<li>[ ] babun 体验更佳 <a href="https://v2ex.com/member/cyio">@cyio</a></li>\n<li>[x] Windows 10 的话直接用系统自带的 Hyper-V 就行了 <a href="https://v2ex.com/member/Kymair">@Kymair</a></li>\n</ul>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#vituralbox" }, "VituralBox")),
            React.createElement("li", null,
                React.createElement("a", { href: "#ubuntu" }, "Ubuntu")),
            React.createElement("li", null,
                React.createElement("a", { href: "#putty" }, "PuTTY")),
            React.createElement("li", null,
                React.createElement("a", { href: "#shared-folders" }, "Shared Folders"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E9%85%8D%E7%BD%AE-shared-folder" }, "\u914D\u7F6E Shared Folder")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E8%AE%BF%E9%97%AE-shared-folder" }, "\u8BBF\u95EE Shared Folder")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "#%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5" }, "\u65E0\u6CD5\u521B\u5EFA\u8F6F\u94FE\u63A5")))),
            React.createElement("li", null,
                React.createElement("a", { href: "#next-step" }, "Next Step")))),
    'author': undefined,
    'contributors': [],
    'date': "2021-07-02T06:13:03.800Z",
    'updated': null,
    'excerpt': "2016-05-20 更新：可以使用更加先进的 Hyper-V + Samba 方案。 要在 Windows 上使用 Linux，最方便最好用的就是装个虚拟机，再用 SSH 连上了。Linux 当然选择无图形界面的 Server 版，所以还需要能够方便的在 Windows 上访问到...",
    'cover': undefined,
    'categories': [
        "编程世界"
    ],
    'tags': [
        "VituralBox",
        "Linux",
        "Windows"
    ],
    'links': {
        "v2ex": "https://v2ex.com/t/274202"
    },
    'blog': {
        "isPost": false,
        "posts": [],
        "categories": [],
        "tags": []
    }
};
